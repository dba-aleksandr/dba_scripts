USE [master]
GO

/****** Object:  Table [dbo].[DBA_tblSP_WHO2]    Script Date: 16.12.2016 11:10:25 ******/
DROP TABLE [dbo].[DBA_tblSP_WHO2]
GO

/****** Object:  Table [dbo].[DBA_tblSP_WHO2]    Script Date: 16.12.2016 11:10:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[DBA_tblSP_WHO2](
	[SPID] [int] NULL,
	[Status] [varchar](max) NULL,
	[Login] [varchar](max) NULL,
	[HOSTNAME] [varchar](max) NULL,
	[BLKBY] [varchar](max) NULL,
	[DBName] [varchar](max) NULL,
	[Command] [varchar](max) NULL,
	[CPUTime] [int] NULL,
	[DiskIO] [int] NULL,
	[LastBatch] [varchar](max) NULL,
	[ProgramName] [varchar](max) NULL,
	[SPID2] [int] NULL,
	[REQUESTID] [int] NULL,
	[dtCreated] [datetime] NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
USE [master]
GO

/****** Object:  StoredProcedure [dbo].[DBA_spSendMail]    Script Date: 16.12.2016 11:13:09 ******/
DROP PROCEDURE [dbo].[DBA_spSendMail]
GO

/****** Object:  StoredProcedure [dbo].[DBA_spSendMail]    Script Date: 16.12.2016 11:13:09 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[DBA_spSendMail]
@TO VARCHAR(8000)
, @SUBJECT VARCHAR(255)
, @BODY NVARCHAR(max)
, @CC VARCHAR(8000) = NULL
, @BCC VARCHAR(8000) = NULL
, @profile_name VARCHAR(255) = 'Admin Mailer'
, @file_attachments NVARCHAR(max) = NULL

AS

SET NOCOUNT ON

-----------------------------------------------------------------------------------------------------
--SELECT @BODY = @BODY + '<br><br>*** SYSTEM ACCOUNT: PLEASE DO NOT REPLY TO THIS MESSAGE ***'
SELECT @BODY = @BODY + '<br><br>*** Системное сообщение сгенерировано автоматически (' + CAST(@@SERVERNAME AS VARCHAR) + '): Просьба не отвечать. ***'
-----------------------------------------------------------------------------------------------------

BEGIN TRY
 EXEC msdb.dbo.sp_send_dbmail @recipients = @TO
 , @subject = @SUBJECT
 , @body = @BODY
 , @copy_recipients = @CC
 , @blind_copy_recipients = @BCC
 , @body_format = 'HTML'--Allows for <br> tags for new lines.
 , @profile_name = @profile_name
 , @file_attachments = @file_attachments
END TRY
BEGIN CATCH
--Your error capture code here... commented mine out... 

 --INSERT INTO DBAdmin.dbo.DBA_tblErrorLog(Location, Script, ErrNumber, ErrDesc)
 --SELECT 'DBAdmin.dbo.DBA_spSendMail' [Location]
 --, RIGHT('EXEC msdb.dbo.sp_send_dbmail TO:' + @TO + ' Subject:' + @subject + ' Body:' + @body,2000) [Script]
 --, ERROR_NUMBER() [ErrNumber]
 --, ERROR_MESSAGE() [ErrDesc]
END CATCH


GO



USE [master]
GO

/****** Object:  StoredProcedure [dbo].[DBA_spWho2CaptureAlert]    Script Date: 16.12.2016 11:12:36 ******/
DROP PROCEDURE [dbo].[DBA_spWho2CaptureAlert]
GO

/****** Object:  StoredProcedure [dbo].[DBA_spWho2CaptureAlert]    Script Date: 16.12.2016 11:12:36 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/*************************************************************************************

TESTING:
EXEC DBO.DBA_spWho2CaptureAlert 
@db = 'Master'
, @TO = 'Gubatenko.A@tts.ru'

select * from DBA_tblSP_WHO2 
*************************************************************************************/
CREATE PROCEDURE [dbo].[DBA_spWho2CaptureAlert]
@DB AS VARCHAR(500) = NULL
, @TO VARCHAR(500) = NULL
AS

SET NOCOUNT ON;

BEGIN TRY
 DROP TABLE #WHO2
END TRY
BEGIN CATCH
 --do nothing
END CATCH

CREATE TABLE #WHO2 (
 SPID INT
 , Status VARCHAR(max)
 , [Login] VARCHAR(max)
 , HOSTNAME VARCHAR(max)
 , BLKBY VARCHAR(max)
 , DBName VARCHAR(max)
 , Command VARCHAR(max)
 , CPUTime INT
 , DiskIO INT
 , LastBatch VARCHAR(max)
 , ProgramName VARCHAR(max)
 , SPID2 INT
 , REQUESTID INT
 ) 

DECLARE @SQL VARCHAR(MAX),
@LimitWaitTime int,
@MaxWaitTime int
SET @LimitWaitTime=100000 -- Максимальное время в милисекундах ожидания в очереди блокировок, при превышении которого отсылаем email (типа признак ДЛИТЕЛЬНОЙ блокировки)
SELECT @SQL = 'SP_WHO2'

INSERT INTO #WHO2
EXEC(@SQL)

DELETE FROM DBA_tblSP_WHO2
WHERE dtcreated <= DATEADD(DAY,-14,GETDATE())

INSERT INTO DBA_tblSP_WHO2 --SELECT * FROM DBA_tblSP_WHO2
(
SPID
, Status
 , [Login]
 , HOSTNAME
 , BLKBY
 , DBName
 , Command
 , CPUTime
 , DiskIO
 , LastBatch
 , ProgramName
 , SPID2
 , REQUESTID
, dtCreated
)
SELECT 
SPID
, Status
 , [Login]
 , HOSTNAME
 , BLKBY
 , DBName
 , Command
 , CPUTime
 , DiskIO
 , LastBatch
 , ProgramName
 , SPID2
 , REQUESTID
, GETDATE() [dtCreated]
FROM #WHO2
WHERE SPID IN (SELECT ISNULL(REPLACE(REPLACE(CAST(BLKBY AS VARCHAR),' ',''),'.',''),'') [SPID] FROM #WHO2)
OR ISNULL(REPLACE(REPLACE(CAST(BLKBY AS VARCHAR),' ',''),'.',''),'') <> ''
ORDER BY BLKBY, SPID

DECLARE @RECCOUNT INT

IF ISNULL(@DB,'') = ''
 BEGIN
SELECT @RECCOUNT = (
SELECT COUNT(*)
FROM #WHO2
WHERE (SPID IN (SELECT ISNULL(REPLACE(REPLACE(CAST(BLKBY AS VARCHAR),' ',''),'.',''),'') [SPID] FROM #WHO2)
OR ISNULL(REPLACE(REPLACE(CAST(BLKBY AS VARCHAR),' ',''),'.',''),'') <> '')
AND (CAST(SPID AS VARCHAR) <> CAST(BLKBY AS VARCHAR)
AND CAST(BLKBY AS VARCHAR) NOT LIKE '%.%')
)
 END
ELSE
 BEGIN
SELECT @RECCOUNT = (
SELECT COUNT(*)
FROM #WHO2
WHERE (SPID IN (SELECT ISNULL(REPLACE(REPLACE(CAST(BLKBY AS VARCHAR),' ',''),'.',''),'') [SPID] FROM #WHO2)
OR ISNULL(REPLACE(REPLACE(CAST(BLKBY AS VARCHAR),' ',''),'.',''),'') <> '')
AND (CAST(SPID AS VARCHAR) <> CAST(BLKBY AS VARCHAR)
AND CAST(BLKBY AS VARCHAR) NOT LIKE '%.%'
AND DBNAME = @DB)
)
 END
SELECT
tbl1.SPID,
SUBSTRING(tbl1.Status,1,15) AS Status,
SUBSTRING(Login,1,25) AS Login,
SUBSTRING(tbl1.HostName,1,15) AS HostName,
BlkBy, SUBSTRING(DBName,1,15) AS DBName,
SUBSTRING(Command,1,35) AS Command,
CPUTime,
DiskIO,
SUBSTRING(LastBatch,1,15) AS LastBatch,
SUBSTRING(ProgramName,1,60) AS ProgramName,
SPID2,
WaitTime

INTO ##who3
FROM #who2 AS tbl1 LEFT OUTER JOIN master..sysprocesses AS tbl2 WITH (NOLOCK) ON tbl1.SPID = tbl2.SPID
WHERE tbl1.SPID IN (SELECT BlkBy FROM #who2 WHERE BlkBy not like '%.%') OR BlkBy not like '%.%'
--Максимальное время ожидания в очереди блокировок
--SET @MaxWaitTime=300
SELECT @MaxWaitTime=MAX(WaitTime) FROM ##who3
SELECT @MaxWaitTime AS [Максимальное время ожидания (мсек)]
--IF (@MaxWaitTime>@LimitWaitTime) 
--BEGIN
DROP TABLE ##WHO3
IF @RECCOUNT > 0 and @MaxWaitTime>@LimitWaitTime
 BEGIN

DECLARE @BODY VARCHAR(MAX)
, @POS INT
, @CNTR INT
, @SPID VARCHAR(500)
, @subject_str varchar(255)
, @BLKBY VARCHAR(500)
, @EventInfo VARCHAR(MAX)
, @LASTSPID VARCHAR(500)
, @LASTBLKBY VARCHAR(500)
, @LOGIN VARCHAR(500)
, @DBNAME VARCHAR(500)

DECLARE @WHO2MAIL TABLE(
[ID] INT IDENTITY(1,1)
, SPID INT
, BLKBY VARCHAR(500)
, [LOGIN] VARCHAR(500)
, [DBNAME] VARCHAR(500)
) 

INSERT INTO @WHO2MAIL(SPID, BLKBY, [LOGIN], [DBNAME])
SELECT SPID, BLKBY, [LOGIN], [DBNAME]
FROM #WHO2
WHERE SPID IN (SELECT ISNULL(REPLACE(REPLACE(CAST(BLKBY AS VARCHAR),' ',''),'.',''),'') [SPID] FROM #WHO2)
OR ISNULL(REPLACE(REPLACE(CAST(BLKBY AS VARCHAR),' ',''),'.',''),'') <> ''
ORDER BY BLKBY, SPID

BEGIN TRY 
DROP TABLE #INPUTBUFFER
END TRY
BEGIN CATCH
END CATCH

CREATE TABLE #INPUTBUFFER (
EventType VARCHAR(MAX)
, Parameters VARCHAR(MAX)
, EventInfo VARCHAR(MAX)
)

SELECT @POS = 1, @CNTR = MAX([ID]), @BODY = '', @LASTSPID = '', @LASTBLKBY = ''
, @LOGIN = ''
, @DBNAME = ''
FROM @WHO2MAIL

SELECT @TO = ISNULL(@TO,'Gubatenko.A@tts.ru')-- <--Put your default email address here.

WHILE @POS <= @CNTR
  BEGIN
SELECT @SPID = CAST(SPID AS VARCHAR)
, @BLKBY = CAST(BLKBY AS VARCHAR)
, @LOGIN = CAST(ISNULL([LOGIN],'') AS VARCHAR)
, @DBNAME = CAST(ISNULL([DBNAME],'') AS VARCHAR)
FROM @WHO2MAIL
WHERE ID = @POS

TRUNCATE TABLE #INPUTBUFFER

--IF @POS = 1 
-- BEGIN
----Code to capture first person and include in the email can be added here. 
 --END

SELECT @SQL = 'DBCC INPUTBUFFER(' + @SPID + ')'

PRINT @SQL

INSERT INTO #INPUTBUFFER(EventType, Parameters, EventInfo)
EXEC(@SQL)

SELECT @EventInfo = ISNULL(EventInfo,'')
FROM #INPUTBUFFER

IF @LASTBLKBY = @BLKBY AND @LASTSPID = @SPID
 BEGIN
SELECT @BODY = @BODY
 END
ELSE
 BEGIN 
SELECT @BODY = @BODY + '<BR><b> ИД ПРОЦЕССА (' 
+ @SPID + ') Информация по сессии ' + @BLKBY 
+ ' Login: </B>' + @LOGIN
+ ' <B>DBName: </B>' + @DBNAME
+ '<BR> <B>INPUTBUFFER:</b> ' + @EventInfo + '<BR>'
, @LASTBLKBY = @BLKBY 
, @LASTSPID = @SPID
 END
SELECT @POS = @POS + 1
 END
 
 SET @subject_str = 'Обнаружена блокировка!!!Время ожидания в очереди блокировок = '+convert(varchar(5),@MaxWaitTime/60000)+' мин.,'
EXEC DBO.DBA_spSendMail-- <--Whatever proc you use to send email... This proc is included below.
@TO = @TO
, @SUBJECT = @subject_str
, @BODY = @Body
 END

BEGIN TRY
DROP TABLE #WHO2
END TRY
BEGIN CATCH
END CATCH

BEGIN TRY 
DROP TABLE #INPUTBUFFER
END TRY
BEGIN CATCH
END CATCH


GO

USE [msdb]
GO

/****** Object:  Job [Монитор блокировок]    Script Date: 16.12.2016 11:15:00 ******/
EXEC msdb.dbo.sp_delete_job @job_id=N'f0682f1d-c7e9-4482-a090-1830eeb7ada2', @delete_unused_schedule=1
GO

/****** Object:  Job [Монитор блокировок]    Script Date: 16.12.2016 11:15:00 ******/
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [[Uncategorized (Local)]]    Script Date: 16.12.2016 11:15:01 ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Монитор блокировок', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'No description available.', 
		@category_name=N'[Uncategorized (Local)]', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'Gubatenko.A@tts.ru', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [DUMMY START]    Script Date: 16.12.2016 11:15:02 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'DUMMY START', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=3, 
		@on_success_step_id=0, 
		@on_fail_action=3, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'--DO NOTHING', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [EXEC PROC]    Script Date: 16.12.2016 11:15:02 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'EXEC PROC', 
		@step_id=2, 
		@cmdexec_success_code=0, 
		@on_success_action=3, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=1, 
		@retry_interval=1, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'EXEC DBO.DBA_spWho2CaptureAlert', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [DUMMY CLOSE]    Script Date: 16.12.2016 11:15:02 ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'DUMMY CLOSE', 
		@step_id=3, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=1, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'--DO NADA', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'EVERY 2 MIN FROM 7 TO 7 - 1', 
		@enabled=1, 
		@freq_type=8, 
		@freq_interval=62, 
		@freq_subday_type=2, 
		@freq_subday_interval=10, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=1, 
		@active_start_date=20110224, 
		@active_end_date=99991231, 
		@active_start_time=0, 
		@active_end_time=235959, 
		@schedule_uid=N'e1075d14-6a7f-44d7-bd18-89f757aa00c6'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

GO



